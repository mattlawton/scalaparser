package oci

import io.gatling.core.Predef._
import io.gatling.http.Predef._
import scala.concurrent.duration._

class TestSimulation extends Simulation {

val httpConf = http
	.baseURL(/)
	.exec(http("GET:/about")
get"/about")
	.exec(http("PUT:/about")
put"/about")
	.exec(http("POST:/about")
post"/about")
	.exec(http("DELETE:/about")
delete"/about")
	.exec(http("PATCH:/about")
patch"/about")
	.exec(http("HEAD:/about")
head"/about")
	.exec(http("OPTIONS:/about")
options"/about")
	.exec(http("GET:/audit/{messageId}")
get"/audit/{messageId}")
	.exec(http("POST:/auth/jwt/token")
post"/auth/jwt/token")
	.exec(http("POST:/inventory/availability/{orgCode}")
post"/inventory/availability/{orgCode}")
	.exec(http("GET:/inventory/demand/{orgCode}/{itemID}/{uom}/{confirmedDemandOnly}")
get"/inventory/demand/{orgCode}/{itemID}/{uom}/{confirmedDemandOnly}")
	.exec(http("POST:/inventory/location/{orgCode}")
post"/inventory/location/{orgCode}")
	.exec(http("GET:/inventory/nearbyitems/{orgCode}/{itemID}/{uom}/{channel}/{countryCode}/{zipcode}/{distance}")
get"/inventory/nearbyitems/{orgCode}/{itemID}/{uom}/{channel}/{countryCode}/{zipcode}/{distance}")
	.exec(http("POST:/inventory/overridedemand/{orgCode}")
post"/inventory/overridedemand/{orgCode}")
	.exec(http("POST:/inventory/recompute/{orgCode}")
post"/inventory/recompute/{orgCode}")
	.exec(http("POST:/inventory/{orgCode}/{feedType}")
post"/inventory/{orgCode}/{feedType}")
	.exec(http("POST:/itemlocation/safetystock/{orgCode}")
post"/itemlocation/safetystock/{orgCode}")
	.exec(http("GET:/loglevel/{level}")
get"/loglevel/{level}")
	.exec(http("POST:/master/clearance/{orgCode}")
post"/master/clearance/{orgCode}")
	.exec(http("POST:/master/clearance/{orgCode}/{itemID}/{uom}/{storeID}")
post"/master/clearance/{orgCode}/{itemID}/{uom}/{storeID}")
	.exec(http("POST:/master/depSafetyFactor/{orgCode}")
post"/master/depSafetyFactor/{orgCode}")
	.exec(http("POST:/master/distributionrule")
post"/master/distributionrule")
	.exec(http("POST:/master/importRegionSchema")
post"/master/importRegionSchema")
	.exec(http("POST:/master/importSourcingRules/{orgCode}")
post"/master/importSourcingRules/{orgCode}")
	.exec(http("POST:/master/itemDetails/{orgCode}")
post"/master/itemDetails/{orgCode}")
	.exec(http("POST:/master/makecalendar/{orgCode}")
post"/master/makecalendar/{orgCode}")
	.exec(http("POST:/master/masterdata/insert/importSourcingRules/{orgCode}")
post"/master/masterdata/insert/importSourcingRules/{orgCode}")
	.exec(http("POST:/master/masterdata/insert/makecalendar/{orgCode}")
post"/master/masterdata/insert/makecalendar/{orgCode}")
	.exec(http("POST:/master/masterdata/insert/nodeCapacityDetails/{orgCode}")
post"/master/masterdata/insert/nodeCapacityDetails/{orgCode}")
	.exec(http("DELETE:/master/masterdata/insert/nodeCapacityDetails/{orgCode}")
delete"/master/masterdata/insert/nodeCapacityDetails/{orgCode}")
	.exec(http("POST:/master/masterdata/insert/procurementrule")
post"/master/masterdata/insert/procurementrule")
	.exec(http("GET:/master/nearbystore/{orgCode}/{countryCode}/{zipCode}/{distance}")
get"/master/nearbystore/{orgCode}/{countryCode}/{zipCode}/{distance}")
	.exec(http("POST:/master/nearbystore/{orgCode}/{countryCode}/{zipCode}/{distance}")
post"/master/nearbystore/{orgCode}/{countryCode}/{zipCode}/{distance}")
	.exec(http("DELETE:/master/nearbystore/{orgCode}/{countryCode}/{zipCode}/{distance}/{storeID}")
delete"/master/nearbystore/{orgCode}/{countryCode}/{zipCode}/{distance}/{storeID}")
	.exec(http("PUT:/master/nearbystore/{orgCode}/{countryCode}/{zipCode}/{distance}/{storeID}/{distanceFromZipcode}")
put"/master/nearbystore/{orgCode}/{countryCode}/{zipCode}/{distance}/{storeID}/{distanceFromZipcode}")
	.exec(http("GET:/master/node/{orgCode}/{storeID}")
get"/master/node/{orgCode}/{storeID}")
	.exec(http("POST:/master/node/{orgCode}/{storeID}")
post"/master/node/{orgCode}/{storeID}")
	.exec(http("DELETE:/master/node/{orgCode}/{storeID}")
delete"/master/node/{orgCode}/{storeID}")
	.exec(http("POST:/master/nodeCapacityDetails/{orgCode}")
post"/master/nodeCapacityDetails/{orgCode}")
	.exec(http("POST:/master/nodeControl/{orgCode}")
post"/master/nodeControl/{orgCode}")
	.exec(http("POST:/master/nodeControl/{orgCode}/{itemID}/{uom}/{storeID}")
post"/master/nodeControl/{orgCode}/{itemID}/{uom}/{storeID}")
	.exec(http("POST:/master/nodetransferrule")
post"/master/nodetransferrule")
	.exec(http("GET:/master/postalcode/{countryCode}/{zipcode}")
get"/master/postalcode/{countryCode}/{zipcode}")
	.exec(http("PUT:/master/postalcode/{countryCode}/{zipcode}")
put"/master/postalcode/{countryCode}/{zipcode}")
	.exec(http("POST:/master/postalcode/{countryCode}/{zipcode}")
post"/master/postalcode/{countryCode}/{zipcode}")
	.exec(http("DELETE:/master/postalcode/{countryCode}/{zipcode}")
delete"/master/postalcode/{countryCode}/{zipcode}")
	.exec(http("POST:/master/procurementrule")
post"/master/procurementrule")
	.exec(http("POST:/master/scacservice/{orgCode}")
post"/master/scacservice/{orgCode}")
	.exec(http("POST:/master/updateinventory/dgchange/{orgCode}")
post"/master/updateinventory/dgchange/{orgCode}")
	.exec(http("POST:/reserve/replace/{orgCode}/{reservationID}")
post"/reserve/replace/{orgCode}/{reservationID}")
	.exec(http("POST:/reserve/{orgCode}/{resID}")
post"/reserve/{orgCode}/{resID}")
	.exec(http("POST:/reserve/{orgCode}/{reservationID}/consumedemand/{consumesupply}")
post"/reserve/{orgCode}/{reservationID}/consumedemand/{consumesupply}")
	.exec(http("POST:/reserve/{orgCode}/{reservationID}/scheduledemand")
post"/reserve/{orgCode}/{reservationID}/scheduledemand")
	.exec(http("POST:/reserve/{orgCode}/{reservationID}/unscheduledemand")
post"/reserve/{orgCode}/{reservationID}/unscheduledemand")
	.exec(http("POST:/reserve/{orgCode}/{ttl}/{forceReserve}")
post"/reserve/{orgCode}/{ttl}/{forceReserve}")
setUp(scn.inject(atOnceUsers(5).protocols(httpConf))
